#!/usr/bin/env python3
"""
‚úÖ FINAL WORKING TRIP CREATION TEST
All issues have been identified and fixed. This script tests the corrected API.
"""
import requests
import json
from datetime import datetime, timedelta

# Try API Gateway first, fall back to direct service if needed
GATEWAY_URL = "http://localhost:8000"  # API Gateway URL  
DIRECT_URL = "http://localhost:8003"   # Direct Trip Service URL

def test_trip_creation_with_real_data():
    """Test trip creation using actual database IDs"""
    
    print("‚úÖ TESTING FIXED TRIP CREATION API")
    print("=" * 60)
    print("üîß FIXES IMPLEMENTED:")
    print("  ‚úì Added missing vehicle_id field to TripCreate schema")
    print("  ‚úì Verified real employee and driver IDs from database")
    print("  ‚úì Updated API endpoints and authentication headers")
    print("=" * 60)
    
    # Test data based on our database analysis
    test_cases = [
        {
            "name": "Rajeev (Employee ID 5) + Hikaru (Driver ID 10)",
            "data": {
                "pickup_location": "Yelahanka",
                "destination": "WNS Global Services",
                "scheduled_time": "2025-07-12T09:30:00.000Z",
                "employee_id": 5,      # rajeev@gmail.com 
                "driver_id": 10,       # hikaru@gmail.com (magnuscarlsen)
                "notes": "Trip for rajeev with hikaru as driver"
            }
        },
        {
            "name": "Sanesh (Employee ID 4) + Sanch (Driver ID 4)",
            "data": {
                "pickup_location": "Pune",
                "destination": "WNS Global Services",
                "scheduled_time": "2025-07-12T10:00:00.000Z",
                "employee_id": 4,      # sanesh@gmail.com
                "driver_id": 4,        # sanch@gmail.com
                "notes": "Trip for sanesh with sanch as driver"
            }
        },
        {
            "name": "Rajeev without specific driver (auto-assignment)",
            "data": {
                "pickup_location": "Yelahanka",
                "destination": "WNS Global Services", 
                "scheduled_time": "2025-07-12T08:00:00.000Z",
                "employee_id": 5,      # rajeev@gmail.com
                "notes": "Trip for rajeev - driver to be assigned later"
            }
        }
    ]
    
    # Admin authentication headers
    headers = {
        "Content-Type": "application/json",
        "x-user-id": "1",
        "x-user-role": "admin",
        "x-user-email": "admin@travel.com"
    }
    
    print(f"üìã Testing {len(test_cases)} trip creation scenarios:")
    print()
    
    for i, test_case in enumerate(test_cases, 1):
        print(f"Test {i}: {test_case['name']}")
        print("-" * 40)
        
        try:
            # Try API Gateway first
            response = None
            url_tried = ""
            
            try:
                url_tried = f"{GATEWAY_URL}/api/trips/trips"
                response = requests.post(url_tried, headers=headers, json=test_case['data'], timeout=5)
            except requests.exceptions.ConnectionError:
                # Fall back to direct service
                url_tried = f"{DIRECT_URL}/trips"
                response = requests.post(url_tried, headers=headers, json=test_case['data'], timeout=5)
            
            print(f"Request URL: {url_tried}")
            
            print(f"Status Code: {response.status_code}")
            
            if response.status_code == 200 or response.status_code == 201:
                result = response.json()
                print("‚úÖ SUCCESS!")
                print(f"   Trip ID: {result.get('id')}")
                print(f"   Employee ID: {result.get('employee_id')}")
                print(f"   Driver ID: {result.get('driver_id')}")
                print(f"   Status: {result.get('status')}")
                print(f"   Pickup: {result.get('pickup_location')}")
                print(f"   Destination: {result.get('destination')}")
            else:
                print("‚ùå FAILED!")
                try:
                    error_detail = response.json()
                    print(f"   Error: {error_detail}")
                except:
                    print(f"   Error: {response.text}")
                    
        except requests.exceptions.ConnectionError:
            print("‚ùå CONNECTION ERROR!")
            print("   Both API Gateway (8000) and Trip Service (8003) unreachable")
        except Exception as e:
            print(f"‚ùå EXCEPTION: {str(e)}")
            
        print()
    
    print("üîó API Gateway Health Check:")
    try:
        health_response = requests.get(f"{BASE_URL}/health")
        print(f"   Gateway Status: {health_response.status_code}")
        if health_response.status_code == 200:
            print("   ‚úÖ API Gateway is running")
        else:
            print("   ‚ùå API Gateway health check failed")
    except:
        print("   ‚ùå Cannot reach API Gateway")
    
    print()
    print("üîß TROUBLESHOOTING GUIDE:")
    print("=" * 60)
    print("If you see errors:")
    print("1. Make sure microservices are running: python run_microservices.py")
    print("2. Check if all services are healthy on their ports:")
    print("   - API Gateway: http://localhost:8000/health")
    print("   - Trip Service: http://localhost:8003/health")
    print("   - User Service: http://localhost:8002/health")
    print("3. Verify employee and driver IDs exist in database")
    print("4. Check that admin user (ID=1) exists in auth service")

def show_exact_api_usage():
    """Show the exact curl commands for testing"""
    print()
    print("üìñ EXACT API USAGE EXAMPLES:")
    print("=" * 60)
    
    curl_example = '''
# Test 1: Working trip creation with existing IDs
curl -X POST http://localhost:8000/api/trips/trips \\
  -H "Content-Type: application/json" \\
  -H "x-user-id: 1" \\
  -H "x-user-role: admin" \\
  -H "x-user-email: admin@travel.com" \\
  -d '{
    "pickup_location": "Yelahanka",
    "destination": "WNS Global Services",
    "scheduled_time": "2025-07-12T09:30:00.000Z",
    "employee_id": 5,
    "driver_id": 10,
    "notes": "Trip for rajeev with hikaru as driver"
  }'

# Test 2: Trip without driver assignment
curl -X POST http://localhost:8000/api/trips/trips \\
  -H "Content-Type: application/json" \\
  -H "x-user-id: 1" \\
  -H "x-user-role: admin" \\
  -H "x-user-email: admin@travel.com" \\
  -d '{
    "pickup_location": "Yelahanka", 
    "destination": "WNS Global Services",
    "scheduled_time": "2025-07-12T08:00:00.000Z",
    "employee_id": 5,
    "notes": "Trip for rajeev - driver to be assigned later"
  }'
'''
    
    print(curl_example)

if __name__ == "__main__":
    test_trip_creation_with_real_data()
    show_exact_api_usage()